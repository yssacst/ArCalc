{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","horas","setHoras","dias","setDias","consumo","setConsumo","preco","setPreco","resultado","setResultado","moveX","setMoveX","moveY","setMoveY","className","onMouseMove","window","addEventListener","e","pageX","pageY","style","backgroundPosition","htmlFor","type","step","id","onChange","target","value","required","onClick","event","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4FeA,MAzFf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,OAEWF,qBAFX,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,qBAHjB,mBAGNK,EAHM,KAGGC,EAHH,OAIaN,qBAJb,mBAINO,EAJM,KAICC,EAJD,OAMqBR,qBANrB,mBAMNS,EANM,KAMKC,EANL,OA2BaV,qBA3Bb,mBA2BNW,EA3BM,KA2BCC,EA3BD,OA4BaZ,qBA5Bb,mBA4BNa,EA5BM,KA4BCC,EA5BD,KAqCb,OACE,sBAAKC,UAAU,YAAYC,YARR,WACnBC,OAAOC,iBAAiB,aAAa,SAACC,GACpCP,GAAoB,GAAXO,EAAEC,MAAe,KAC1BN,GAAoB,EAAXK,EAAEE,MAAa,OAK8BC,MAAO,CAAEC,mBAAmB,GAAD,OAAIZ,EAAJ,cAAeE,EAAf,OAAnF,UACE,mBAAGE,UAAU,aAAb,uDACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,cAAjB,8BACA,uBAAMA,UAAU,WAAhB,UACI,uBAAOS,QAAQ,UAAf,mDACA,uBAAOC,KAAK,SAASC,KAAK,MAAMC,GAAG,UAAUC,SAzB/B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC5BvB,EAAWuB,EAAOC,QAwBsEC,UAAQ,IAEpF,uBAAOP,QAAQ,OAAf,yBACA,uBAAOC,KAAK,SAASC,KAAK,MAAMC,GAAG,OAAOC,SA/B/B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACzBzB,EAAQyB,EAAOC,QA8BmEC,UAAQ,IAE9E,uBAAOP,QAAQ,QAAf,wBACA,uBAAOC,KAAK,SAASC,KAAK,MAAMC,GAAG,QAAQC,SArC/B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC1B3B,EAAS2B,EAAOC,QAoCoEC,UAAQ,IAEhF,uBAAOP,QAAQ,QAAf,+CACA,uBAAOC,KAAK,SAASC,KAAK,MAAMC,GAAG,QAAQC,SA/B/B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC1BrB,EAASqB,EAAOC,QA8BoEC,UAAQ,IAEhF,wBAAQC,QA/CD,SAACC,GACpBA,EAAMC,iBACNxB,EAAaL,EAAQ,GAAGJ,EAAME,EAAKI,IA6CQkB,KAAK,SAASV,UAAU,MAAvD,4BAGR,sBAAKA,UAAU,SAAf,UACE,uBAAOA,UAAU,cAAjB,uBACA,qBAAKA,UAAU,eAAf,SACKN,EACD,uEAEE,oBAAGM,UAAU,gBAAb,gBAAiCN,EAAjC,OAFF,UAGUR,EAHV,cAG4BE,EAH5B,WADa,2FAUrB,sBAAKY,UAAU,gBAAf,UACE,uCACA,sBAAKA,UAAU,WAAf,UACE,oBAAGA,UAAU,iBAAb,UAA8B,+CAA9B,oDAAmG,mDAAnG,8CACA,oBAAGA,UAAU,iBAAb,UAA8B,iDAA9B,oDAAkG,oDAAlG,8CACA,oBAAGA,UAAU,iBAAb,UAA8B,yDAA9B,oDAC2C,yDAD3C,+FAIA,oBAAGA,UAAU,iBAAb,UAA8B,sDAA9B,4CAA+F,0EAA/F,mFAGJ,sBAAMA,UAAU,SAAhB,sDC3ESoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f94f5758.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [horas, setHoras] = useState();\n  const [dias, setDias] = useState();\n  const [consumo, setConsumo] = useState();\n  const [preco, setPreco] = useState();\n  \n  const [resultado, setResultado] = useState();\n\n  \n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    setResultado(consumo/30*horas*dias*preco);\n  }\n  \n  const handleChangeHoras = ({target}) => {\n    setHoras(target.value)\n  }\n  const handleChangeDias = ({target}) => {\n    setDias(target.value)\n  }\n  const handleChangeConsumo = ({target}) => {\n    setConsumo(target.value)\n  }\n  const handleChangePreco = ({target}) => {    \n    setPreco(target.value)\n  }\n  \n  const [moveX, setMoveX] = useState();\n  const [moveY, setMoveY] = useState();\n\n  const handleCursor = () => {\n    window.addEventListener(\"mousemove\", (e) =>{\n      setMoveX(e.pageX * -0.9 / 100);\n      setMoveY(e.pageY * -1 / 8);\n    });\n  };\n\n  return (\n    <div className=\"container\" onMouseMove={ handleCursor } style={{ backgroundPosition:`${moveX}px ${moveY}px` }}>\n      <p className=\"lbl-titulo\">Calculadora de Consumo de Ar Condicionado</p>\n      <div className=\"bx-principal\">\n        <div className=\"bx-aux\">\n            <label className=\"lbl-legenda\">Informe os dados</label>\n            <form className=\"frm-calc\">\n                <label htmlFor=\"consumo\">Consumo do aparelho (kW/h por mês)</label>\n                <input type=\"number\" step=\"0.1\" id=\"consumo\" onChange={handleChangeConsumo} required/>\n                \n                <label htmlFor=\"dias\">Dias/mês</label>\n                <input type=\"number\" step=\"0.1\" id=\"dias\" onChange={handleChangeDias} required/>\n                \n                <label htmlFor=\"horas\"> Horas/dia</label>\n                <input type=\"number\" step=\"0.1\" id=\"horas\" onChange={handleChangeHoras} required/>\n                \n                <label htmlFor=\"preco\">Preço da energia (R$ por kW/h)</label>\n                <input type=\"number\" step=\"0.1\" id=\"preco\" onChange={handleChangePreco} required/>\n                \n                <button onClick={handleSubmit} type=\"submit\" className=\"btn\">Calcular</button>\n            </form>\n        </div>\n        <div className=\"bx-aux\">\n          <label className=\"lbl-legenda\">Resultado</label>\n          <div className=\"bx-resultado\">\n            { !resultado ? <p>Preencha os campos anteriores para saber o consumo</p>: \n              <label>\n                O valor aproximado de consumo é\n                <p className=\"lbl-resultado\">R$ {resultado} </p>\n                Usando {horas} horas por {dias} dias\n              </label>\n              }\n          </div>\n        </div>\n      </div>\n      <div className=\"bx-explicacao\">\n        <h3>Ajuda</h3>\n        <div className=\"bx-ajuda\">\n          <p className=\"txt-explicacao\"><strong>Horas/dia</strong>: Nesse campo você deverá informar quantas <strong>horas por dia</strong> você irá usar o ar condicionado. </p>\n          <p className=\"txt-explicacao\"><strong>Dias/mês</strong>: Nesse campo você deverá informar quantos <strong>dias no mês</strong> você irá usar o ar condicionado. </p>\n          <p className=\"txt-explicacao\"><strong>Consumo do aparelho</strong>: \n            Nesse campo você deverá informar qual o  <strong>consumo por mês </strong> do seu ar condicionado. \n            Essa informação vem em uma etiqueta no próprio aparelho \n          </p>\n          <p className=\"txt-explicacao\"><strong>Preço do kW/h</strong>: Nesse campo você deverá informar <strong>quanto custa o kW/h na sua região</strong>. Você consegue encontrar essa informação na sua conta de luz.</p>\n        </div>\n      </div>\n      <span className=\"footer\">Desenvolvido por Rayssa Costa - 2021</span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}